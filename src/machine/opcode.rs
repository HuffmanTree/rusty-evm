use std::fmt::{Display, Formatter, Result};

use crate::blockchain::WorldState;
use crate::machine::context::{CallContext, TransactionContext};
use crate::machine::instructions::{Instructions, InstructionResult};

pub struct OpCode(pub u8);

impl Display for OpCode {
    fn fmt(&self, f: &mut Formatter<'_>) -> Result {
        match self.0 {
            0x00 => "STOP",
            0x01 => "ADD",
            0x02 => "MUL",
            0x03 => "SUB",
            0x04 => "DIV",
            0x05 => "SDIV",
            0x06 => "MOD",
            0x07 => "SMOD",
            0x08 => "ADDMOD",
            0x09 => "MULMOD",
            0x0A => "EXP",
            0x0B => "SIGNEXTEND",
            0x10 => "LT",
            0x11 => "GT",
            0x12 => "SLT",
            0x13 => "SGT",
            0x14 => "EQ",
            0x15 => "ISZERO",
            0x16 => "AND",
            0x17 => "OR",
            0x18 => "XOR",
            0x19 => "NOT",
            0x1A => "BYTE",
            0x1B => "SHL",
            0x1C => "SHR",
            0x1D => "SAR",
            0x20 => "KECCAK256",
            0x30 => "ADDRESS",
            0x31 => "BALANCE",
            0x32 => "ORIGIN",
            0x33 => "CALLER",
            0x34 => "CALLVALUE",
            0x35 => "CALLDATALOAD",
            0x36 => "CALLDATASIZE",
            0x37 => "CALLDATACOPY",
            0x38 => "CODESIZE",
            0x39 => "CODECOPY",
            0x3A => "GASPRICE",
            0x3B => "EXTCODESIZE",
            0x3C => "EXTCODECOPY",
            0x3D => "RETURNDATASIZE",
            0x3E => "RETURNDATACOPY",
            0x3F => "EXTCODEHASH",
            0x40 => "BLOCKHASH",
            0x41 => "COINBASE",
            0x42 => "TIMESTAMP",
            0x43 => "NUMBER",
            0x44 => "PREVRANDAO",
            0x45 => "GASLIMIT",
            0x46 => "CHAINID",
            0x47 => "SELFBALANCE",
            0x48 => "BASEFEE",
            0x49 => "BLOBHASH",
            0x4A => "BLOBBASEFEE",
            0x50 => "POP",
            0x51 => "MLOAD",
            0x52 => "MSTORE",
            0x53 => "MSTORE8",
            0x54 => "SLOAD",
            0x55 => "SSTORE",
            0x56 => "JUMP",
            0x57 => "JUMPI",
            0x58 => "PC",
            0x59 => "MSIZE",
            0x5A => "GAS",
            0x5B => "JUMPDEST",
            0x5C => "TLOAD",
            0x5D => "TSTORE",
            0x5E => "MCOPY",
            0x5F => "PUSH0",
            0x60 => "PUSH1",
            0x61 => "PUSH2",
            0x62 => "PUSH3",
            0x63 => "PUSH4",
            0x64 => "PUSH5",
            0x65 => "PUSH6",
            0x66 => "PUSH7",
            0x67 => "PUSH8",
            0x68 => "PUSH9",
            0x69 => "PUSH10",
            0x6A => "PUSH11",
            0x6B => "PUSH12",
            0x6C => "PUSH13",
            0x6D => "PUSH14",
            0x6E => "PUSH15",
            0x6F => "PUSH16",
            0x70 => "PUSH17",
            0x71 => "PUSH18",
            0x72 => "PUSH19",
            0x73 => "PUSH20",
            0x74 => "PUSH21",
            0x75 => "PUSH22",
            0x76 => "PUSH23",
            0x77 => "PUSH24",
            0x78 => "PUSH25",
            0x79 => "PUSH26",
            0x7A => "PUSH27",
            0x7B => "PUSH28",
            0x7C => "PUSH29",
            0x7D => "PUSH30",
            0x7E => "PUSH31",
            0x7F => "PUSH32",
            0x80 => "DUP1",
            0x81 => "DUP2",
            0x82 => "DUP3",
            0x83 => "DUP4",
            0x84 => "DUP5",
            0x85 => "DUP6",
            0x86 => "DUP7",
            0x87 => "DUP8",
            0x88 => "DUP9",
            0x89 => "DUP10",
            0x8A => "DUP11",
            0x8B => "DUP12",
            0x8C => "DUP13",
            0x8D => "DUP14",
            0x8E => "DUP15",
            0x8F => "DUP16",
            0x90 => "SWAP1",
            0x91 => "SWAP2",
            0x92 => "SWAP3",
            0x93 => "SWAP4",
            0x94 => "SWAP5",
            0x95 => "SWAP6",
            0x96 => "SWAP7",
            0x97 => "SWAP8",
            0x98 => "SWAP9",
            0x99 => "SWAP10",
            0x9A => "SWAP11",
            0x9B => "SWAP12",
            0x9C => "SWAP13",
            0x9D => "SWAP14",
            0x9E => "SWAP15",
            0x9F => "SWAP16",
            0xA0 => "LOG0",
            0xA1 => "LOG1",
            0xA2 => "LOG2",
            0xA3 => "LOG3",
            0xA4 => "LOG4",
            0xF0 => "CREATE",
            0xF1 => "CALL",
            0xF2 => "CALLCODE",
            0xF3 => "RETURN",
            0xF4 => "DELEGATECALL",
            0xF5 => "CREATE2",
            0xFA => "STATICCALL",
            0xFD => "REVERT",
            0xFE => "INVALID",
            0xFF => "SELFDESTRUCT",
            _ => "UNKNOWN",
        }.fmt(f)
    }
}

impl OpCode {
    pub fn execute(&self, s: &mut WorldState, tctx: &TransactionContext, cctx: &mut CallContext) -> InstructionResult {
        (match self.0 {
            0x00 => Instructions::stop,
            0x01 => Instructions::add,
            0x02 => Instructions::mul,
            0x03 => Instructions::sub,
            0x04 => Instructions::div,
            0x05 => Instructions::sdiv,
            0x06 => Instructions::r#mod,
            0x07 => Instructions::smod,
            0x08 => Instructions::addmod,
            0x09 => Instructions::mulmod,
            0x0A => Instructions::exp,
            0x0B => Instructions::signextend,
            0x10 => Instructions::lt,
            0x11 => Instructions::gt,
            0x12 => Instructions::slt,
            0x13 => Instructions::sgt,
            0x14 => Instructions::eq,
            0x15 => Instructions::iszero,
            0x16 => Instructions::and,
            0x17 => Instructions::or,
            0x18 => Instructions::xor,
            0x19 => Instructions::not,
            0x1A => Instructions::byte,
            0x1B => Instructions::shl,
            0x1C => Instructions::shr,
            0x1D => Instructions::sar,
            0x20 => Instructions::keccak256,
            0x30 => Instructions::address,
            0x31 => Instructions::balance,
            0x32 => Instructions::origin,
            0x33 => Instructions::caller,
            0x34 => Instructions::callvalue,
            0x35 => Instructions::calldataload,
            0x36 => Instructions::calldatasize,
            0x37 => Instructions::calldatacopy,
            0x38 => Instructions::codesize,
            0x39 => Instructions::codecopy,
            0x3A => Instructions::gasprice,
            0x3B => Instructions::extcodesize,
            0x3C => Instructions::extcodecopy,
            0x3D => Instructions::returndatasize,
            0x3E => Instructions::returndatacopy,
            0x3F => Instructions::extcodehash,
            0x40 => Instructions::blockhash,
            0x41 => Instructions::coinbase,
            0x42 => Instructions::timestamp,
            0x43 => Instructions::number,
            0x44 => Instructions::prevrandao,
            0x45 => Instructions::gaslimit,
            0x46 => Instructions::chainid,
            0x47 => Instructions::selfbalance,
            0x48 => Instructions::basefee,
            0x49 => Instructions::blobhash,
            0x4A => Instructions::blobbasefee,
            0x50 => Instructions::pop,
            0x51 => Instructions::mload,
            0x52 => Instructions::mstore,
            0x53 => Instructions::mstore8,
            0x54 => Instructions::sload,
            0x55 => Instructions::sstore,
            0x56 => Instructions::jump,
            0x57 => Instructions::jumpi,
            0x58 => Instructions::pc,
            0x59 => Instructions::msize,
            0x5A => Instructions::gas,
            0x5B => Instructions::jumpdest,
            0x5C => Instructions::tload,
            0x5D => Instructions::tstore,
            0x5E => Instructions::mcopy,
            0x5F => Instructions::push::<0>,
            0x60 => Instructions::push::<1>,
            0x61 => Instructions::push::<2>,
            0x62 => Instructions::push::<3>,
            0x63 => Instructions::push::<4>,
            0x64 => Instructions::push::<5>,
            0x65 => Instructions::push::<6>,
            0x66 => Instructions::push::<7>,
            0x67 => Instructions::push::<8>,
            0x68 => Instructions::push::<9>,
            0x69 => Instructions::push::<10>,
            0x6A => Instructions::push::<11>,
            0x6B => Instructions::push::<12>,
            0x6C => Instructions::push::<13>,
            0x6D => Instructions::push::<14>,
            0x6E => Instructions::push::<15>,
            0x6F => Instructions::push::<16>,
            0x70 => Instructions::push::<17>,
            0x71 => Instructions::push::<18>,
            0x72 => Instructions::push::<19>,
            0x73 => Instructions::push::<20>,
            0x74 => Instructions::push::<21>,
            0x75 => Instructions::push::<22>,
            0x76 => Instructions::push::<23>,
            0x77 => Instructions::push::<24>,
            0x78 => Instructions::push::<25>,
            0x79 => Instructions::push::<26>,
            0x7A => Instructions::push::<27>,
            0x7B => Instructions::push::<28>,
            0x7C => Instructions::push::<29>,
            0x7D => Instructions::push::<30>,
            0x7E => Instructions::push::<31>,
            0x7F => Instructions::push::<32>,
            0x80 => Instructions::dup::<1>,
            0x81 => Instructions::dup::<2>,
            0x82 => Instructions::dup::<3>,
            0x83 => Instructions::dup::<4>,
            0x84 => Instructions::dup::<5>,
            0x85 => Instructions::dup::<6>,
            0x86 => Instructions::dup::<7>,
            0x87 => Instructions::dup::<8>,
            0x88 => Instructions::dup::<9>,
            0x89 => Instructions::dup::<10>,
            0x8A => Instructions::dup::<11>,
            0x8B => Instructions::dup::<12>,
            0x8C => Instructions::dup::<13>,
            0x8D => Instructions::dup::<14>,
            0x8E => Instructions::dup::<15>,
            0x8F => Instructions::dup::<16>,
            0x90 => Instructions::swap::<2>,
            0x91 => Instructions::swap::<3>,
            0x92 => Instructions::swap::<4>,
            0x93 => Instructions::swap::<5>,
            0x94 => Instructions::swap::<6>,
            0x95 => Instructions::swap::<7>,
            0x96 => Instructions::swap::<8>,
            0x97 => Instructions::swap::<9>,
            0x98 => Instructions::swap::<10>,
            0x99 => Instructions::swap::<11>,
            0x9A => Instructions::swap::<12>,
            0x9B => Instructions::swap::<13>,
            0x9C => Instructions::swap::<14>,
            0x9D => Instructions::swap::<15>,
            0x9E => Instructions::swap::<16>,
            0x9F => Instructions::swap::<17>,
            0xA0 => Instructions::log::<0>,
            0xA1 => Instructions::log::<1>,
            0xA2 => Instructions::log::<2>,
            0xA3 => Instructions::log::<3>,
            0xA4 => Instructions::log::<4>,
            0xF0 => Instructions::create,
            0xF1 => Instructions::call,
            0xF2 => Instructions::callcode,
            0xF3 => Instructions::r#return,
            0xF4 => Instructions::delegatecall,
            0xF5 => Instructions::create2,
            0xFA => Instructions::staticcall,
            0xFD => Instructions::revert,
            0xFE => Instructions::invalid,
            0xFF => Instructions::selfdestruct,
            _ => Instructions::invalid,
        })(s, tctx, cctx)
    }
}
